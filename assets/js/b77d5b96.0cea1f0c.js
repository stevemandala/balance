"use strict";(self.webpackChunkstaticdocs_starter=self.webpackChunkstaticdocs_starter||[]).push([[0],{3905:function(e,t,n){n.r(t),n.d(t,{MDXContext:function(){return c},MDXProvider:function(){return p},mdx:function(){return h},useMDXComponents:function(){return d},withMDXComponents:function(){return u}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(){return i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i.apply(this,arguments)}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),u=function(e){return function(t){var n=d(t.components);return r.createElement(e,i({},t,{components:n}))}},d=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=d(e.components);return r.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,a=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=d(n),p=o,f=u["".concat(a,".").concat(p)]||u[p]||m[p]||i;return n?r.createElement(f,l(l({ref:t},c),{},{components:n})):r.createElement(f,l({ref:t},c))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},35971:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return d}});var r=n(83117),o=n(80102),i=(n(67294),n(3905)),a=["components"],l={id:"contributing",title:"Contributing",sidebar_position:4},s=void 0,c={unversionedId:"docs/contributing",id:"docs/contributing",title:"Contributing",description:"We want to make contributing to this project as easy and transparent as",source:"@site/docs/docs/contributing.md",sourceDirName:"docs",slug:"/docs/contributing",permalink:"/docs/docs/contributing",draft:!1,editUrl:"https://github.com/facebookresearch/balance/website/docs/docs/contributing.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{id:"contributing",title:"Contributing",sidebar_position:4},sidebar:"docsSidebar",previous:{title:"Post-Stratification",permalink:"/docs/docs/statistical_methods/poststratify"}},u={},d=[{value:"Pull Requests",id:"pull-requests",level:2},{value:"Contributor License Agreement (&quot;CLA&quot;)",id:"contributor-license-agreement-cla",level:2},{value:"Issues",id:"issues",level:2},{value:"Code Requirements",id:"code-requirements",level:2},{value:"Coding Style",id:"coding-style",level:3},{value:"Linting",id:"linting",level:3},{value:"Static Type Checking",id:"static-type-checking",level:3},{value:"Unit testing",id:"unit-testing",level:3},{value:"Documentation",id:"documentation",level:3},{value:"License",id:"license",level:2}],p={toc:d};function m(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.mdx)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.mdx)("h1",{id:"contributing-to-balance"},"Contributing to balance"),(0,i.mdx)("p",null,"We want to make contributing to this project as easy and transparent as\npossible."),(0,i.mdx)("h2",{id:"pull-requests"},"Pull Requests"),(0,i.mdx)("p",null,"We actively welcome your pull requests."),(0,i.mdx)("ol",null,(0,i.mdx)("li",{parentName:"ol"},"Fork the repo and create your branch from ",(0,i.mdx)("inlineCode",{parentName:"li"},"main"),"."),(0,i.mdx)("li",{parentName:"ol"},"If you've added code that should be tested, add tests."),(0,i.mdx)("li",{parentName:"ol"},"If you've changed APIs, update the documentation."),(0,i.mdx)("li",{parentName:"ol"},"Ensure the test suite passes."),(0,i.mdx)("li",{parentName:"ol"},"Make sure your code lints."),(0,i.mdx)("li",{parentName:"ol"},'If you haven\'t already, complete the Contributor License Agreement ("CLA").')),(0,i.mdx)("h2",{id:"contributor-license-agreement-cla"},'Contributor License Agreement ("CLA")'),(0,i.mdx)("p",null,"In order to accept your pull request, we need you to submit a CLA. You only need\nto do this once to work on any of Meta's open source projects."),(0,i.mdx)("p",null,"Complete your CLA here: ",(0,i.mdx)("a",{parentName:"p",href:"https://code.facebook.com/cla"},"https://code.facebook.com/cla")),(0,i.mdx)("h2",{id:"issues"},"Issues"),(0,i.mdx)("p",null,"We use GitHub issues to track public bugs. Please ensure your description is\nclear and has sufficient instructions to be able to reproduce the issue."),(0,i.mdx)("p",null,"Meta has a ",(0,i.mdx)("a",{parentName:"p",href:"https://www.facebook.com/whitehat/"},"bounty program")," for the safe\ndisclosure of security bugs. In those cases, please go through the process\noutlined on that page and do not file a public issue."),(0,i.mdx)("h2",{id:"code-requirements"},"Code Requirements"),(0,i.mdx)("h3",{id:"coding-style"},"Coding Style"),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},"4 spaces for indentation rather than tabs"),(0,i.mdx)("li",{parentName:"ul"},"80 character line length")),(0,i.mdx)("h3",{id:"linting"},"Linting"),(0,i.mdx)("p",null,"Run the linter via ",(0,i.mdx)("inlineCode",{parentName:"p"},"flake8")," (",(0,i.mdx)("inlineCode",{parentName:"p"},"pip install flake8"),") from the root of the Ax repository. Note that we have a ",(0,i.mdx)("a",{parentName:"p",href:"https://github.com/facebookresearch/balance/blob/main/.flake8"},"custom flake8 configuration"),"."),(0,i.mdx)("h3",{id:"static-type-checking"},"Static Type Checking"),(0,i.mdx)("p",null,"We use ",(0,i.mdx)("a",{parentName:"p",href:"https://pyre-check.org/"},"Pyre")," for static type checking and require code to be fully type annotated."),(0,i.mdx)("h3",{id:"unit-testing"},"Unit testing"),(0,i.mdx)("p",null,"We strongly recommend adding unit testing when introducing new code. To run all unit tests, we recommend installing pytest using ",(0,i.mdx)("inlineCode",{parentName:"p"},"pip install pytest")," and running ",(0,i.mdx)("inlineCode",{parentName:"p"},"pytest -ra")," from the root of the balance repo."),(0,i.mdx)("h3",{id:"documentation"},"Documentation"),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},"We require docstrings on all public functions and classes (those not prepended with ",(0,i.mdx)("inlineCode",{parentName:"li"},"_"),")."),(0,i.mdx)("li",{parentName:"ul"},"We use the ",(0,i.mdx)("a",{parentName:"li",href:"https://sphinxcontrib-napoleon.readthedocs.io/en/latest/example_google.html"},"Google docstring style")," & use Sphinx to compile API reference documentation."),(0,i.mdx)("li",{parentName:"ul"},"Our ",(0,i.mdx)("a",{parentName:"li",href:"https://import-balance.org"},"website")," leverages Docusaurus 2.0 + Sphinx for generating our documentation content."),(0,i.mdx)("li",{parentName:"ul"},"To rule out parsing errors, we suggesting ",(0,i.mdx)("a",{parentName:"li",href:"https://www.sphinx-doc.org/en/master/usage/installation.html"},"installing sphinx")," and running ",(0,i.mdx)("inlineCode",{parentName:"li"},"make html")," from the balance/sphinx folder. Alternatively, you may also try running ",(0,i.mdx)("inlineCode",{parentName:"li"},"./script/make_docs")," from the root of the balance repo folder.")),(0,i.mdx)("h2",{id:"license"},"License"),(0,i.mdx)("p",null,"By contributing to balance, you agree that your contributions will be licensed\nunder the LICENSE file in the root directory of this source tree."))}m.isMDXComponent=!0}}]);